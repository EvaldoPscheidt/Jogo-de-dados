<!DOCTYPE html>
<html lang="pt-br">
<head>
  <title>Jogo de Dados</title>
  <style>
   body { /* Estiliza??o para todo o corpo do documento */
      font-family: Arial, sans-serif; /* Define a fonte do texto */
      background-color: #333; /* Define a cor de fundo da p?gina para cinza escuro */
      display: flex; /* Define o tipo de exibi??o como flex?vel para centralizar conte?do */
      justify-content: center; /* Centraliza o conte?do horizontalmente */
      align-items: center; /* Centraliza o conte?do verticalmente */
      height: 100vh; /* Define a altura da p?gina para ser a mesma da janela de visualiza??o */
      margin: 0; /* Remove a margem padr?o */
      color: #fff; /* Define a cor do texto para branco */
      perspective: 1000px; /* Define a dist?ncia do ponto de vista para a rota??o 3D */
      user-select: none; /* Desativa a sele??o de texto */
      flex-wrap: wrap;
    }

    button, h1, #dice, #result {
    width: 100%;
    }

    #game-container { /* Estiliza??o para o cont?iner do jogo */
      background-color: #4CAF50; /* Define a cor de fundo do cont?iner do jogo para verde */
      border-radius: 5px; /* Arredonda os cantos do cont?iner do jogo */
      padding: 50px; /* Adiciona preenchimento ao cont?iner do jogo */
      box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.3); /* Adiciona uma sombra ao cont?iner do jogo */
    }

    #game-content { /* Estiliza??o para o conte?do do jogo */
      display: flex; /* Define o tipo de exibi??o como flex?vel para alinhar os elementos */
      flex-direction: column; /* Define a dire??o do fluxo de elementos para a coluna */
      align-items: center; /* Centraliza os elementos verticalmente */
    }

    h1 { /* Estiliza??o para o t?tulo */
      margin: 0; /* Remove a margem padr?o do t?tulo */
      color: #fff; /* Define a cor do texto do título para branco */
      text-align: center; /* Centraliza o texto do título */
      font-size: 2.5em; /* Define o tamanho da fonte do título */
    }


    button {
    font-family: 'Roboto', sans-serif;
    background: white;
    color: #4CAF50;
    border: none;
    padding: 15px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 20px 0;
    cursor: pointer;
    border-radius: 50px;
    box-shadow: 0 3px 5px 2px rgba(255, 105, 135, .3);
    transition: all 0.1s ease-in-out;
    position: relative;
    overflow: hidden;
}

button:hover {
    box-shadow: 0 5px 7px 2px rgba(48, 46, 46, 0.3);
    transform: translateY(-0.5px);
    background-color: #4CAF50;
    color: #fff;
}

button:active {
    transform: translateY(2px);
    box-shadow: 0 1px 3px 1px rgba(255, 105, 135, .3);
}


    
    #dice {
     position: relative; /* Define a posi??o do elemento como "relativa" */
     width: 100px; /* Define a largura do elemento como 100 pixels */
     height: 100px; /* Define a altura do elemento como 100 pixels */
     transform-style: preserve-3d; /* Habilita o uso de transforma??es 3D nos elementos filhos */
     transition: transform 3s ease-in-out; /* Define uma transição animada para a propriedade "transform" */
     margin-top: 50px; /* Adiciona uma margem acima do dado (por?m, h? um erro aqui, o valor deve ser num?rico) */
}

.face {
      position: absolute; /* Define a posi??o do elemento como "absoluta" */
      width: 100px; /* Define a largura do elemento como 100 pixels */
      height: 100px; /* Define a altura do elemento como 100 pixels */
      background-color: #fff; /* Define a cor de fundo do elemento como branco (#fff) */
      color: #4CAF50; /* Define a cor do texto do elemento como verde (#4CAF50) */
      text-align: center; /* Centraliza o conte?do do elemento horizontalmente */
      line-height: 100px; /* Define a altura da linha do texto igual ? altura do elemento, centralizando verticalmente */
      font-size: 2em; /* Define o tamanho da fonte como o dobro do tamanho padr?o */
      box-shadow: 0px 0px 10px rgba(0,0,0,0.3); /* Adiciona uma sombra ao elemento */
}

.front { transform: translateZ(50px); } /* Move o elemento 50 pixels ao longo do eixo Z em dire??o ao usu?rio */
.back { transform: rotateY(180deg) translateZ(50px); } /* Gira o elemento em 180 graus em torno do eixo Y, virando-o de cabe?a para baixo, e o move 50 pixels ao longo do eixo Z em dire??o ao usu?rio */
.left { transform: rotateY(-90deg) translateZ(50px); } /* Gira o elemento em -90 graus em torno do eixo Y, movendo-o para a esquerda, e o move 50 pixels ao longo do eixo Z em dire??o ao usu?rio */
.right { transform: rotateY(90deg) translateZ(50px); } /* Gira o elemento em 90 graus em torno do eixo Y, movendo-o para a direita, e o move 50 pixels ao longo do eixo Z em dire??o ao usu?rio */
.top { transform: rotateX(90deg) translateZ(50px); } /* Gira o elemento em 90 graus em torno do eixo X, movendo-o para cima, e o move 50 pixels ao longo do eixo Z em dire??o ao usu?rio */
.bottom { transform: rotateX(-90deg) translateZ(50px); } /* Gira o elemento em -90 graus em torno do eixo X, movendo-o para baixo, e o move 50 pixels ao longo do eixo Z em dire??o ao usu?rio */

#result {
  text-align: center; /* Centraliza o texto horizontalmente dentro do elemento */
  font-size: 2em; /* Define o tamanho da fonte como o dobro do tamanho padrão */
  margin-top: 30px; /* Adiciona uma margem superior de 30 pixels ao elemento */
}

@media (max-width: 480px) {
    body {
        font-size: 4vw; /* Aumenta o tamanho da fonte baseado na largura do viewport */
    }
    
    button {
        padding: 5vw; /* Aumenta o padding do botão baseado na largura do viewport */
        font-size: 4vw; /* Aumenta o tamanho da fonte baseado na largura do viewport */
        margin: 4vw 0; /* Aumenta a margem baseado na largura do viewport */
    }
    
    h1 {
        font-size: 8vw; /* Aumenta o tamanho do título para melhor visibilidade */
    }

    #dice {
        width: 50vw; /* Aumenta significativamente o tamanho do dado para melhor visualização */
        height: 50vw;
    }

    .face {
        width: 50vw; /* Aumenta o tamanho das faces do dado para corresponder ao novo tamanho do dado */
        height: 50vw;
        line-height: 50vw; /* Aumenta a linha de altura para manter o texto centrado */
        font-size: 8vw; /* Aumenta ainda mais o tamanho da fonte para melhor legibilidade */
    }

    #result {
        font-size: 6vw; /* Aumenta o tamanho da fonte do resultado para melhor visibilidade */
    }
}


  </style>
</head>
<div id="game-container">
  <div id="game-content">
    <h1>Jogo de Dados</h1>
    <button onclick="rollDice()">Lançar Dado!</button>
    <div id="dice">
      <div class="face front">1</div>
      <div class="face back">2</div>
      <div class="face left">3</div>
      <div class="face right">4</div>
      <div class="face top">5</div>
      <div class="face bottom">6</div>
    </div>
    <div id="result"></div>
  </div>
</div>
<script>
  function rollDice() {
  var diceElement = document.getElementById('dice');
  var resultElement = document.getElementById('result');
  var rollButton = document.querySelector('button');
  
  rollButton.disabled = true; // Desabilita o botão de rolagem

  var roll = Math.floor(Math.random() * 6) + 1;
  var randomRotations = Math.floor(Math.random() * 5) * 360;

  diceElement.style.transition = '0s';
  diceElement.style.transform = 'none';

  setTimeout(function() {
    diceElement.style.transition = '3s';
    switch (roll) {
      case 1:
        diceElement.style.transform = 'rotateX(' + randomRotations + 'deg) rotateY(' + randomRotations + 'deg)';
        break;
      case 2:
        diceElement.style.transform = 'rotateX(' + randomRotations + 'deg) rotateY(' + (randomRotations + 180) + 'deg)';
        break;
      case 3:
        diceElement.style.transform = 'rotateY(' + (randomRotations + 90) + 'deg) rotateX(' + randomRotations + 'deg)';
        break;
      case 4:
        diceElement.style.transform = 'rotateY(' + (randomRotations - 90) + 'deg) rotateX(' + randomRotations + 'deg)';
        break;
      case 5:
        diceElement.style.transform = 'rotateX(' + (randomRotations - 90) + 'deg) rotateY(' + randomRotations + 'deg)';
        break;
      case 6:
        diceElement.style.transform = 'rotateX(' + (randomRotations + 90) + 'deg) rotateY(' + randomRotations + 'deg)';
        break;
    }
  }, 100);

  resultElement.textContent = '';

  diceElement.addEventListener('transitionend', function() {
    resultElement.textContent = 'O número que saiu foi: ' + roll;
    rollButton.disabled = false; // Habilita o botão de rolagem
  }, {once: true});
}
</script>
</body>
</html>
